import { Actions } from "@/auth";
import {
  Button,
  DismissibleList,
  EmptyState,
  Layout,
  LoadingIndicator,
} from "@/components";
import { t } from "@/locales";
import { organisation } from "@/locales/tr";
import { api, appName, getMenuItems, Routes } from "@/utils";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React from "react";

const MosqueDetails = () => {
  const router = useRouter();
  const { id, title } = router.query;

  const menuItems = getMenuItems({
    onAdd: () => router.push(`${Routes.ORGANISATIONS}/create?mosqueId=${id}`),
    onEdit: () => router.push(`${Routes.MOSQUES}/${id}/edit`),
  });

  const { data, isFetching } = api.mosque.getOneMosque.useQuery({
    id: id as string,
  });

  return (
    <>
      <Head>
        <title>{`${appName} - ${title}`}</title>
        <meta name="description" content="Generated by create-t3-app" />
      </Head>
      <Layout
        title={data?.name ?? (title as string)}
        menuItems={menuItems}
        requiredActions={[Actions.MOSQUE_READ]}
      >
        <main className="flex flex-grow flex-col p-4">
          {isFetching ? (
            <LoadingIndicator />
          ) : data.organisations.length < 1 ? (
            <EmptyState text={t.mosque.noOrganisationsFound} />
          ) : (
            <DismissibleList
              data={data.organisations}
              onRemove={() => console.log("Organisation remove.")}
            >
              {(organisation) => (
                <Link
                  className="w-full"
                  href={`${Routes.ORGANISATIONS}/${organisation.id}?title=${organisation.name}`}
                >
                  <Button className="text-left text-header2">
                    {organisation.name}
                  </Button>
                </Link>
              )}
            </DismissibleList>
          )}
        </main>
      </Layout>
    </>
  );
};

export default MosqueDetails;
